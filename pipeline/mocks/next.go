// Code generated by mockery v2.32.0. DO NOT EDIT.

package pipelinemocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Next is an autogenerated mock type for the Next type
type Next[T interface{}] struct {
	mock.Mock
}

// Execute provides a mock function with given fields: _a0, _a1
func (_m *Next[T]) Execute(_a0 context.Context, _a1 T) (T, error) {
	ret := _m.Called(_a0, _a1)

	var r0 T
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, T) (T, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, T) T); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Get(0).(T)
	}

	if rf, ok := ret.Get(1).(func(context.Context, T) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewNext creates a new instance of Next. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewNext[T interface{}](t interface {
	mock.TestingT
	Cleanup(func())
}) *Next[T] {
	mock := &Next[T]{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
